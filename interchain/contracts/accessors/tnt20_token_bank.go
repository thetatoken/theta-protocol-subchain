// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package accessors

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/thetatoken/thetasubchain/eth"
	"github.com/thetatoken/thetasubchain/eth/abi"
	"github.com/thetatoken/thetasubchain/eth/abi/bind"
	"github.com/thetatoken/theta/common"
	"github.com/thetatoken/thetasubchain/eth/core/types"
	"github.com/thetatoken/thetasubchain/eth/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// TNT20TokenBankMetaData contains all meta data concerning the TNT20TokenBank contract.
var TNT20TokenBankMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mainchainID_\",\"type\":\"uint256\"},{\"internalType\":\"contractChainRegistrar\",\"name\":\"chainRegistrar_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sourceChainTokenSender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetChainID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetChainVoucherReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenLockNonce\",\"type\":\"uint256\"}],\"name\":\"TNT20TokenLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetChainTokenReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"unlockedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainVoucherBurnNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenUnlockNonce\",\"type\":\"uint256\"}],\"name\":\"TNT20TokenUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sourceChainVoucherOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetChainTokenReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherBurnNonce\",\"type\":\"uint256\"}],\"name\":\"TNT20VoucherBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"targetChainVoucherReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voucherContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceChainTokenLockNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voucherMintNonce\",\"type\":\"uint256\"}],\"name\":\"TNT20VoucherMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allDenoms\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVouchers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"denomToVoucherLookup\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voucherAddress\",\"type\":\"address\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"subchainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"}],\"name\":\"getAdjustedValidatorSet\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shareAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voucherContractAddr\",\"type\":\"address\"}],\"name\":\"getDenom\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"}],\"name\":\"getMaxProcessedTokenLockNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"}],\"name\":\"getMaxProcessedVoucherBurnNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventNonce\",\"type\":\"uint256\"}],\"name\":\"getTokenLockEventHeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"}],\"name\":\"getVoucher\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eventNonce\",\"type\":\"uint256\"}],\"name\":\"getVoucherBurnEventHeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainchainID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenLockNonceMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"tokenLockVotingRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumlatedShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenUnlockNonceMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalLockedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voucherAddressToDenomLookup\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voucherBurnNonceMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"voucherBurnVotingRecords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accumlatedShares\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voucherMintNonceMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetChainID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sourceChainTNT20Contract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetChainVoucherReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockAmount\",\"type\":\"uint256\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"targetChainVoucherReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainTokenLockNonce\",\"type\":\"uint256\"}],\"name\":\"mintVouchers\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sourceChainVoucherContractAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"targetChainTokenReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"burnedAmount\",\"type\":\"uint256\"}],\"name\":\"burnVouchers\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sourceChainID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"denom\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"targetChainTokenReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"unlockAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dynasty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sourceChainVoucherBurnNonce\",\"type\":\"uint256\"}],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040516200513d3803806200513d833981016040819052620000349162000064565b6001600081905591909155600280546001600160a01b0319166001600160a01b03909216919091179055620000a3565b600080604083850312156200007857600080fd5b825160208401519092506001600160a01b03811681146200009857600080fd5b809150509250929050565b61508a80620000b36000396000f3fe608060405260043610620001845760003560e01c80638883931e11620000e2578063ca2075691162000095578063ebda9962116200006c578063ebda996214620005d8578063f6a3d24e14620005fd578063f95627ac146200063d578063feaff052146200066e57600080fd5b8063ca207569146200053a578063ccf187c7146200056b578063dd17eb6d146200059c57600080fd5b80638883931e146200045c5780639d3a0f0c146200048d578063a0df5cc514620004b2578063a2cc698114620004c9578063aa861c1514620004ee578063bff4c41a146200052357600080fd5b8063588b1408116200013b578063588b1408146200032e57806360569b5e14620003625780636ac739b91462000397578063740cb7f814620003d3578063766f8fb014620004045780637ff75b46146200043557600080fd5b8063073b950214620001895780631527b14d14620001b45780631eb787371462000225578063261a323e146200027e57806327ca4df114620002b45780633f1a8aa814620002f2575b600080fd5b3480156200019657600080fd5b50620001a160015481565b6040519081526020015b60405180910390f35b348015620001c157600080fd5b5062000205620001d3366004620033e8565b8051602081830181018051600d825292820191909301209152546001600160a01b03811690600160a01b900460ff1682565b604080516001600160a01b039093168352901515602083015201620001ab565b3480156200023257600080fd5b50620002686200024436600462003657565b600b6020908152600092835260408084209091529082529020805460029091015482565b60408051928352602083019190915201620001ab565b3480156200028b57600080fd5b50620002a36200029d366004620033e8565b620006b1565b6040519015158152602001620001ab565b348015620002c157600080fd5b50620002d9620002d336600462003574565b620006f5565b6040516001600160a01b039091168152602001620001ab565b348015620002ff57600080fd5b50620001a162000311366004620035a8565b601160209081526000928352604080842090915290825290205481565b3480156200033b57600080fd5b50620003536200034d36600462003574565b62000720565b604051620001ab9190620039e7565b3480156200036f57600080fd5b5062000387620003813660046200326a565b620007d5565b604051620001ab92919062003b4e565b348015620003a457600080fd5b50620001a1620003b636600462003657565b600091825260086020908152604080842092845291905290205490565b348015620003e057600080fd5b50620001a1620003f236600462003574565b60066020526000908152604090205481565b3480156200041157600080fd5b50620001a16200042336600462003574565b6000908152600a602052604090205490565b3480156200044257600080fd5b506200045a620004543660046200367a565b62000884565b005b3480156200046957600080fd5b50620001a16200047b36600462003574565b60036020526000908152604090205481565b3480156200049a57600080fd5b506200045a620004ac366004620034a1565b62000b5f565b6200045a620004c3366004620032aa565b62000e5e565b348015620004d657600080fd5b50620002d9620004e8366004620033e8565b620011e4565b348015620004fb57600080fd5b50620005136200050d36600462003657565b6200125a565b604051620001ab9291906200396c565b6200045a62000534366004620035db565b62001514565b3480156200054757600080fd5b50620001a16200055936600462003574565b60056020526000908152604090205481565b3480156200057857600080fd5b50620001a16200058a36600462003574565b60046020526000908152604090205481565b348015620005a957600080fd5b50620001a1620005bb36600462003657565b600091825260076020908152604080842092845291905290205490565b348015620005e557600080fd5b5062000353620005f73660046200326a565b620019ce565b3480156200060a57600080fd5b50620002a36200061c3660046200326a565b6001600160a01b03166000908152600e602052604090206001015460ff1690565b3480156200064a57600080fd5b50620001a16200065c36600462003574565b60009081526009602052604090205490565b3480156200067b57600080fd5b50620002686200068d36600462003657565b600c6020908152600092835260408084209091529082529020805460029091015482565b600080620006bf8362001ace565b9050600d81604051620006d3919062003743565b9081526040519081900360200190205460ff600160a01b909104169392505050565b600f81815481106200070657600080fd5b6000918252602090912001546001600160a01b0316905081565b601081815481106200073157600080fd5b9060005260206000200160009150905080546200074e9062003e1e565b80601f01602080910402602001604051908101604052809291908181526020018280546200077c9062003e1e565b8015620007cd5780601f10620007a157610100808354040283529160200191620007cd565b820191906000526020600020905b815481529060010190602001808311620007af57829003601f168201915b505050505081565b600e60205260009081526040902080548190620007f29062003e1e565b80601f0160208091040260200160405190810160405280929190818152602001828054620008209062003e1e565b8015620008715780601f10620008455761010080835404028352916020019162000871565b820191906000526020600020905b8154815290600101906020018083116200085357829003601f168201915b5050506001909301549192505060ff1682565b60026000541415620008b35760405162461bcd60e51b8152600401620008aa9062003bd1565b60405180910390fd5b60026000908155620008c58662001ace565b9050600080620008d58362001ae1565b91509150806200093e5760405162461bcd60e51b815260206004820152602d60248201527f4661696c656420746f206578747261637420636f6e747261637420616464726560448201526c73732066726f6d2064656e6f6d60981b6064820152608401620008aa565b60008981526011602090815260408083206001600160a01b0386168452909152902054861115620009c75760405162461bcd60e51b815260206004820152602c60248201527f43616e6e6f7420756e6c6f636b207468652072657175657374656420616d6f7560448201526b6e74206f6620746f6b656e7360a01b6064820152608401620008aa565b60008984888a8989604051602001620009e696959493929190620038b0565b604051602081830303815290604052805190602001209050600062000a0f8b8884893362001b62565b9050801562000b4d5760008b81526011602090815260408083206001600160a01b038816845290915290205462000a47908962001b81565b60008c81526011602090815260408083206001600160a01b03898116808652919093529281902093909355915163a9059cbb60e01b8152918b166004830152602482018a90529063a9059cbb90604401602060405180830381600087803b15801562000ab257600080fd5b505af115801562000ac7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000aed9190620033ca565b5062000af98b62001b96565b60008b815260046020526040908190205490517f189b6301573b050cb7c350cae6d2d5c6262fda802e3b6cc69ee25eb35bdaa4eb9062000b439088908d908d908c90879062003b0c565b60405180910390a1505b50506001600055505050505050505050565b6002600054141562000b855760405162461bcd60e51b8152600401620008aa9062003bd1565b6002600090815562000b978962001ace565b905060008062000ba78362001bbf565b915091508062000c065760405162461bcd60e51b8152602060048201526024808201527f4661696c656420746f206578747261637420636861696e49442066726f6d2064604482015263656e6f6d60e01b6064820152608401620008aa565b600082848c8c8c8c8c8c8c60405160200162000c2b999897969594939291906200381a565b604051602081830303815290604052805190602001209050600062000c54848884893362001c50565b9050801562000e4a5760405163130d191f60e11b8152309063261a323e9062000c82908890600401620039e7565b60206040518083038186803b15801562000c9b57600080fd5b505afa15801562000cb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cd69190620033ca565b62000cf45762000cf48562000cee878f8f8f62001c65565b62001d07565b60405163a2cc698160e01b8152600090309063a2cc69819062000d1c908990600401620039e7565b60206040518083038186803b15801562000d3557600080fd5b505afa15801562000d4a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000d7091906200328a565b90506001600160a01b03811662000ddb5760405162461bcd60e51b815260206004820152602860248201527f74686520766f756368657220666f72207468652064656e6f6d20646f6573206e6044820152671bdd08195e1a5cdd60c21b6064820152608401620008aa565b62000de8818b8b62001f31565b62000df38562001f9f565b600085815260066020526040908190205490517f5249cf5aa9f373a9fda5076a53abb87450615986fd25b4d701a153f8840eaf089062000e3f9089908e9086908f908e90889062003a3e565b60405180910390a150505b505060016000555050505050505050505050565b6002600054141562000e845760405162461bcd60e51b8152600401620008aa9062003bd1565b600260009081556040516375ed4cb160e11b81526001600160a01b0385166004820152309063ebda99629060240160006040518083038186803b15801562000ecb57600080fd5b505afa15801562000ee0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000f0a919081019062003421565b905080516000141562000f785760405162461bcd60e51b815260206004820152602f60248201527f6661696c656420746f206c6f6f6b75702064656e6f6d20666f7220746865207660448201526e1bdd58da195c8818dbdb9d1c9858dd608a1b6064820152608401620008aa565b60405163130d191f60e11b8152309063261a323e9062000f9d908490600401620039e7565b60206040518083038186803b15801562000fb657600080fd5b505afa15801562000fcb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000ff19190620033ca565b6200103f5760405162461bcd60e51b815260206004820152601f60248201527f566f756368657220636f6e747261637420646f6573206e6f74206578697374006044820152606401620008aa565b336200104d85828562001fc0565b6000806200105b8462001bbf565b9150915080620010c15760405162461bcd60e51b815260206004820152602a60248201527f4661696c656420746f206578747261637420746172676574436861696e49442060448201526966726f6d2064656e6f6d60b01b6064820152608401620008aa565b620010cc8262001ff9565b600082815260056020526040908190205490517f8cd7380d25c66046ede32c8a8089e2c5c5356ed48d6885bb3956f3a1bc4f030d906200111690879087908b908b908790620039fc565b60405180910390a1600260009054906101000a90046001600160a01b03166001600160a01b0316639bbb690a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200116d57600080fd5b505afa15801562001182573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620011a891906200358e565b341015620011ca5760405162461bcd60e51b8152600401620008aa9062003b74565b620011d58362002044565b50506001600055505050505050565b600080620011f28362001ace565b90506000600d8260405162001208919062003743565b908152604080516020928190038301812081830190925290546001600160a01b0381168252600160a01b900460ff161580159282019290925291506200125057519392505050565b5060009392505050565b6060806000600154461490506000600260009054906101000a90046001600160a01b03166001600160a01b031663a7464b126040518163ffffffff1660e01b815260040160206040518083038186803b158015620012b757600080fd5b505afa158015620012cc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012f291906200358e565b600254604051632f2c13b560e01b81526004810189905291925060009182916001600160a01b031690632f2c13b590602401604080518083038186803b1580156200133c57600080fd5b505afa15801562001351573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001377919062003628565b915091506000818015620013965750620013928885620023e3565b8310155b8015620013ba5750620013b784620013b08a6001620023f1565b90620023e3565b83105b9050848015620013c75750805b1562001478576000620013dc896001620023f1565b6002546040516343f27e4560e01b8152600481018d9052602481018390529192506001600160a01b0316906343f27e459060440160006040518083038186803b1580156200142957600080fd5b505afa1580156200143e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620014689190810190620032f0565b975097505050505050506200150d565b6002546040516343f27e4560e01b8152600481018b9052602481018a90526001600160a01b03909116906343f27e459060440160006040518083038186803b158015620014c457600080fd5b505afa158015620014d9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620015039190810190620032f0565b9650965050505050505b9250929050565b600260005414156200153a5760405162461bcd60e51b8152600401620008aa9062003bd1565b6002600055600154841480620015cb57506002546040516343b71f0560e01b8152600481018690526001600160a01b03909116906343b71f059060240160206040518083038186803b1580156200159057600080fd5b505afa158015620015a5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015cb9190620033ca565b620016195760405162461bcd60e51b815260206004820152601960248201527f6e6f7420612076616c696420746172676574436861696e4944000000000000006044820152606401620008aa565b6040516323b872dd60e01b81523360048201523060248201526044810182905283906001600160a01b038216906323b872dd90606401602060405180830381600087803b1580156200166a57600080fd5b505af11580156200167f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016a59190620033ca565b506000620016e44660405180604001604052806002815260200161032360f41b815250620016de886001600160a01b03166014620023ff565b620025b9565b60008781526011602090815260408083206001600160a01b038a168452909152902054909150620017169084620023f1565b60008781526011602090815260408083206001600160a01b038a1684529091529020556200174486620025fd565b6000600360008881526020019081526020016000205490507fe5d8852bc02bf44f2a49b2d7722fa497ff83b689a28de1253304d2bc43d7b1cb8233898888886001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015620017bc57600080fd5b505afa158015620017d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620017fb919081019062003421565b896001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200183557600080fd5b505afa1580156200184a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001874919081019062003421565b8a6001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015620018ae57600080fd5b505afa158015620018c3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620018e99190620036f5565b89604051620019019998979695949392919062003a88565b60405180910390a1600260009054906101000a90046001600160a01b03166001600160a01b0316639bbb690a6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200195857600080fd5b505afa1580156200196d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200199391906200358e565b341015620019b55760405162461bcd60e51b8152600401620008aa9062003b74565b620019c08762002044565b505060016000555050505050565b6001600160a01b0381166000908152600e6020526040808220815180830190925280546060939291908290829062001a069062003e1e565b80601f016020809104026020016040519081016040528092919081815260200182805462001a349062003e1e565b801562001a855780601f1062001a595761010080835404028352916020019162001a85565b820191906000526020600020905b81548152906001019060200180831162001a6757829003601f168201915b50505091835250506001919091015460ff1615156020918201528101519091501562001ab2575192915050565b5050604080516020810190915260008152919050565b50919050565b606062001adb8262002648565b92915050565b60008060008062001af985602f60f81b6002620026ce565b915091508062001b10575060009485945092505050565b60008062001b2d8762001b2586600162003cbc565b89516200276a565b915091508062001b465750600096879650945050505050565b600062001b53836200288d565b98600198509650505050505050565b600062001b778686868686600a600c62002aa8565b9695505050505050565b600062001b8f828462003d95565b9392505050565b600081815260046020526040812080546001929062001bb790849062003cbc565b909155505050565b60008060008062001bd785602f60f81b6001620026ce565b915091508062001bee575060009485945092505050565b60008062001bff876000866200276a565b915091508062001c185750600096879650945050505050565b60008062001c268462002e44565b915091508062001c4157506000988998509650505050505050565b50976001975095505050505050565b600062001b7786868686866009600b62002aa8565b60008030905060008560405160200162001c80919062003761565b604051602081830303815290604052905060008560405160200162001ca69190620037ef565b60405160208183030381529060405290506000838984848960405162001ccc90620030c0565b62001cdc95949392919062003906565b604051809103906000f08015801562001cf9573d6000803e3d6000fd5b509998505050505050505050565b600062001d148362001ace565b60405163130d191f60e11b8152909150309063261a323e9062001d3c908490600401620039e7565b60206040518083038186803b15801562001d5557600080fd5b505afa15801562001d6a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d909190620033ca565b1562001dea5760405162461bcd60e51b815260206004820152602260248201527f616e20766f756368657220636f6e747261637420616c72656164792065786973604482015261747360f01b6064820152608401620008aa565b6040805180820182526001600160a01b0384168152600160208201529051600d9062001e1890849062003743565b90815260408051918290036020908101832084518154958301511515600160a01b026001600160a81b03199096166001600160a01b039182161795909517905582820182528483526001838201529285166000908152600e845220815180519293919262001e8a9284920190620030ce565b506020918201516001918201805460ff1916911515919091179055600f80548083019091557f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319166001600160a01b038616179055601080549182018155600052825162001f2b927f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290920191840190620030ce565b50505050565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f19906044015b600060405180830381600087803b15801562001f8057600080fd5b505af115801562001f95573d6000803e3d6000fd5b5050505050505050565b600081815260066020526040812080546001929062001bb790849062003cbc565b604051632770a7eb60e21b81526001600160a01b03838116600483015260248201839052849190821690639dc29fac9060440162001f65565b60008181526005602052604081208054600192906200201a90849062003cbc565b90915550506000908152600860209081526040808320600583528184205484529091529020439055565b6000620020518262002f2c565b90506000600260009054906101000a90046001600160a01b03166001600160a01b0316639bbb690a6040518163ffffffff1660e01b815260040160206040518083038186803b158015620020a457600080fd5b505afa158015620020b9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020df91906200358e565b905080620020ec57505050565b6002546040805163dba9de6b60e01b8152815160009384936001600160a01b039091169263dba9de6b9260048083019392829003018186803b1580156200213257600080fd5b505afa15801562002147573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200216d919062003628565b9150915080620021b85760405162461bcd60e51b81526020600482015260156024820152746661696c656420746f206765742064796e6173747960581b6044820152606401620008aa565b600080620021c786856200125a565b8151919350915080620021de575050505050505050565b80825114620022425760405162461bcd60e51b815260206004820152602960248201527f76616c696461746f7220616e6420736861726520616d6f756e7420636f756e74604482015268040dad2e6dac2e8c6d60bb1b6064820152608401620008aa565b6000805b8281101562002297576200228084828151811062002268576200226862003eb6565b602002602001015183620023f190919063ffffffff16565b9150806200228e8162003e55565b91505062002246565b5080620022a957505050505050505050565b8660005b8381101562002373576000620022f584620022ee888581518110620022d657620022d662003eb6565b60200260200101518d620023e390919063ffffffff16565b9062002f49565b90508682815181106200230c576200230c62003eb6565b60200260200101516001600160a01b03166108fc829081150290604051600060405180830381858888f193505050501580156200234d573d6000803e3d6000fd5b506200235a838262001b81565b92505080806200236a9062003e55565b915050620022ad565b50846200238260018562003d95565b8151811062002395576200239562003eb6565b60200260200101516001600160a01b03166108fc829081150290604051600060405180830381858888f19350505050158015620023d6573d6000803e3d6000fd5b5050505050505050505050565b600062001b8f828462003d48565b600062001b8f828462003cbc565b606060006200241083600262003d48565b6200241d90600262003cbc565b67ffffffffffffffff81111562002438576200243862003ecc565b6040519080825280601f01601f19166020018201604052801562002463576020820181803683370190505b509050600360fc1b8160008151811062002481576200248162003eb6565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620024b357620024b362003eb6565b60200101906001600160f81b031916908160001a9053506000620024d984600262003d48565b620024e690600162003cbc565b90505b600181111562002568576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106200251e576200251e62003eb6565b1a60f81b82828151811062002537576200253762003eb6565b60200101906001600160f81b031916908160001a90535060049490941c93620025608162003e04565b9050620024e9565b50831562001b8f5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401620008aa565b6060620025f5620025ca8562002f57565b8484604051602001620025e0939291906200378f565b60405160208183030381529060405262001ace565b949350505050565b60008181526003602052604081208054600192906200261e90849062003cbc565b90915550506000908152600760209081526040808320600383528184205484529091529020439055565b60608160005b8151811015620026c7576200268682828151811062002671576200267162003eb6565b01602001516001600160f81b0319166200306d565b8282815181106200269b576200269b62003eb6565b60200101906001600160f81b031916908160001a90535080620026be8162003e55565b9150506200264e565b5092915050565b82516000908190859082805b828110156200275657876001600160f81b03191684828151811062002703576200270362003eb6565b01602001516001600160f81b031916141562002741576200272660018362003cbc565b91508682141562002741579450600193506200276292505050565b806200274d8162003e55565b915050620026da565b50600080945094505050505b935093915050565b825160609060009084841015620027965750506040805160208101909152600080825290915062002762565b80841115620027ba5750506040805160208101909152600080825290915062002762565b856000620027c9868862001b81565b67ffffffffffffffff811115620027e457620027e462003ecc565b6040519080825280601f01601f1916602001820160405280156200280f576020820181803683370190505b509050865b8681101562001c415782818151811062002832576200283262003eb6565b01602001516001600160f81b031916826200284e838b62001b81565b8151811062002861576200286162003eb6565b60200101906001600160f81b031916908160001a90535080620028848162003e55565b91505062002814565b60008181808060025b602a81101562002a9d57620028ae6101008562003d16565b9350848181518110620028c557620028c562003eb6565b016020015160f81c925084620028dd82600162003cbc565b81518110620028f057620028f062003eb6565b016020015160f81c915060616001600160a01b038416108015906200291f57506066836001600160a01b031611155b156200293a576200293260578462003d6a565b9250620029ad565b6041836001600160a01b0316101580156200295f57506046836001600160a01b031611155b1562002972576200293260378462003d6a565b6030836001600160a01b0316101580156200299757506039836001600160a01b031611155b15620029ad57620029aa60308462003d6a565b92505b6061826001600160a01b031610158015620029d257506066826001600160a01b031611155b15620029ed57620029e560578362003d6a565b915062002a60565b6041826001600160a01b03161015801562002a1257506046826001600160a01b031611155b1562002a2557620029e560378362003d6a565b6030826001600160a01b03161015801562002a4a57506039826001600160a01b031611155b1562002a605762002a5d60308362003d6a565b91505b8162002a6e84601062003d16565b62002a7a919062003c8e565b62002a86908562003c8e565b935062002a9560028262003cbc565b905062002896565b509195945050505050565b600060015488148062002b3657506002546040516343b71f0560e01b8152600481018a90526001600160a01b03909116906343b71f059060240160206040518083038186803b15801562002afb57600080fd5b505afa15801562002b10573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b369190620033ca565b62002b765760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a590818da185a5b9251608a1b6044820152606401620008aa565b60008881526020849052604090205462002b9290600162003cbc565b851462002ba25750600062002e39565b600088815260208381526040808320898452909152812060015460609081908c9081141562002bce5750465b62002bda818d6200125a565b9350915060005b825181101562002d4e57896001600160a01b031683828151811062002c0a5762002c0a62003eb6565b60200260200101516001600160a01b03161462002c275762002d39565b6001955060005b600186015481101562002cd15785600101818154811062002c535762002c5362003eb6565b6000918252602090912001546001600160a01b038c81169116141562002cbc5760405162461bcd60e51b815260206004820152601c60248201527f546869732076616c696461746f7220616c726561647920766f746564000000006044820152606401620008aa565b8062002cc88162003e55565b91505062002c2e565b508c85556001808601805491820181556000908152602090200180546001600160a01b03191633179055835162002d339085908390811062002d175762002d1762003eb6565b60200260200101518660020154620023f190919063ffffffff16565b60028601555b8062002d458162003e55565b91505062002be1565b5050508262002d925760405162461bcd60e51b815260206004820152600f60248201526e2737ba1030903b30b634b230ba37b960891b6044820152606401620008aa565b6000805b825181101562002dd05762002db983828151811062002268576200226862003eb6565b91508062002dc78162003e55565b91505062002d96565b5062002dde816002620023e3565b600284015462002df0906003620023e3565b1062002e305760008c81526020889052604090205462002e1290600162003cbc565b60008d815260208990526040902055506001935062002e3992505050565b60009450505050505b979650505050505050565b80516000908190839082805b8281101562002f1f57603084828151811062002e705762002e7062003eb6565b016020015160f81c1080159062002ea45750603984828151811062002e995762002e9962003eb6565b016020015160f81c11155b1562002efb5762002eb782600a620023e3565b915062002ef3603085838151811062002ed45762002ed462003eb6565b016020015162002ee8919060f81c62003daf565b839060ff16620023f1565b915062002f0a565b50600096879650945050505050565b8062002f168162003e55565b91505062002e50565b5095600195509350505050565b60008060015483141562002f4257504662001adb565b5090919050565b600062001b8f828462003cff565b60608162002f7c5750506040805180820190915260018152600360fc1b602082015290565b8160005b811562002fac578062002f938162003e55565b915062002fa49050600a8362003cff565b915062002f80565b60008167ffffffffffffffff81111562002fca5762002fca62003ecc565b6040519080825280601f01601f19166020018201604052801562002ff5576020820181803683370190505b5090505b8415620025f5576200300d60018362003d95565b91506200301c600a8662003e73565b6200302990603062003cbc565b60f81b81838151811062003041576200304162003eb6565b60200101906001600160f81b031916908160001a90535062003065600a8662003cff565b945062002ff9565b6000604160f81b6001600160f81b03198316108015906200309c5750602d60f91b6001600160f81b0319831611155b15620030bc57620030b360f883901c602062003cd7565b60f81b92915050565b5090565b6111498062003f0c83390190565b828054620030dc9062003e1e565b90600052602060002090601f0160209004810192826200310057600085556200314b565b82601f106200311b57805160ff19168380011785556200314b565b828001600101855582156200314b579182015b828111156200314b5782518255916020019190600101906200312e565b50620030bc9291505b80821115620030bc576000815560010162003154565b8035620031778162003ee2565b919050565b600082601f8301126200318e57600080fd5b81516020620031a7620031a18362003c3c565b62003c08565b80838252828201915082860187848660051b8901011115620031c857600080fd5b60005b85811015620031e957815184529284019290840190600101620031cb565b5090979650505050505050565b805180151581146200317757600080fd5b600082601f8301126200321957600080fd5b81356200322a620031a18262003c63565b8181528460208386010111156200324057600080fd5b816020850160208301376000918101602001919091529392505050565b8035620031778162003efb565b6000602082840312156200327d57600080fd5b813562001b8f8162003ee2565b6000602082840312156200329d57600080fd5b815162001b8f8162003ee2565b600080600060608486031215620032c057600080fd5b8335620032cd8162003ee2565b92506020840135620032df8162003ee2565b929592945050506040919091013590565b600080604083850312156200330457600080fd5b825167ffffffffffffffff808211156200331d57600080fd5b818501915085601f8301126200333257600080fd5b8151602062003345620031a18362003c3c565b8083825282820191508286018a848660051b89010111156200336657600080fd5b600096505b8487101562003396578051620033818162003ee2565b8352600196909601959183019183016200336b565b5091880151919650909350505080821115620033b157600080fd5b50620033c0858286016200317c565b9150509250929050565b600060208284031215620033dd57600080fd5b62001b8f82620031f6565b600060208284031215620033fb57600080fd5b813567ffffffffffffffff8111156200341357600080fd5b620025f58482850162003207565b6000602082840312156200343457600080fd5b815167ffffffffffffffff8111156200344c57600080fd5b8201601f810184136200345e57600080fd5b80516200346f620031a18262003c63565b8181528560208385010111156200348557600080fd5b6200349882602083016020860162003dd5565b95945050505050565b600080600080600080600080610100898b031215620034bf57600080fd5b883567ffffffffffffffff80821115620034d857600080fd5b620034e68c838d0162003207565b995060208b0135915080821115620034fd57600080fd5b6200350b8c838d0162003207565b985060408b01359150808211156200352257600080fd5b50620035318b828c0162003207565b9650506200354260608a016200325d565b94506200355260808a016200316a565b979a969950949793969560a0850135955060c08501359460e001359350915050565b6000602082840312156200358757600080fd5b5035919050565b600060208284031215620035a157600080fd5b5051919050565b60008060408385031215620035bc57600080fd5b823591506020830135620035d08162003ee2565b809150509250929050565b60008060008060808587031215620035f257600080fd5b843593506020850135620036068162003ee2565b92506040850135620036188162003ee2565b9396929550929360600135925050565b600080604083850312156200363c57600080fd5b825191506200364e60208401620031f6565b90509250929050565b600080604083850312156200366b57600080fd5b50508035926020909101359150565b60008060008060008060c087890312156200369457600080fd5b86359550602087013567ffffffffffffffff811115620036b357600080fd5b620036c189828a0162003207565b9550506040870135620036d48162003ee2565b959894975094956060810135955060808101359460a0909101359350915050565b6000602082840312156200370857600080fd5b815162001b8f8162003efb565b600081518084526200372f81602086016020860162003dd5565b601f01601f19169290920160200192915050565b600082516200375781846020870162003dd5565b9190910192915050565b600082516200377581846020870162003dd5565b67102b37bab1b432b960c11b920191825250600801919050565b60008451620037a381846020890162003dd5565b8083019050602f60f81b8082528551620037c5816001850160208a0162003dd5565b60019201918201528351620037e281600284016020880162003dd5565b0160020195945050505050565b603b60f91b8152600082516200380d81600185016020870162003dd5565b9190910160010192915050565b898152600060208a516200383481838601848f0162003dd5565b8a51908401906200384b81848401858f0162003dd5565b8a519101906200386181848401858e0162003dd5565b60f89990991b6001600160f81b031916980101968752505060609390931b6bffffffffffffffffffffffff19166001850152601584019190915260358301526055820152607501949350505050565b86815260008651620038ca816020850160208b0162003dd5565b602092019182019590955260609390931b6bffffffffffffffffffffffff19166040840152605483019190915260748201526094019392505050565b6001600160a01b038616815260a0602082018190526000906200392c9083018762003715565b828103604084015262003940818762003715565b9050828103606084015262003956818662003715565b91505060ff831660808301529695505050505050565b604080825283519082018190526000906020906060840190828701845b82811015620039b05781516001600160a01b03168452928401929084019060010162003989565b5050508381038285015284518082528583019183019060005b81811015620031e957835183529284019291840191600101620039c9565b60208152600062001b8f602083018462003715565b60a08152600062003a1160a083018862003715565b6001600160a01b039687166020840152949095166040820152606081019290925260809091015292915050565b60c08152600062003a5360c083018962003715565b6001600160a01b0397881660208401529590961660408201526060810193909352608083019190915260a09091015292915050565b600061012080835262003a9e8184018d62003715565b6001600160a01b038c81166020860152604085018c90528a1660608501526080840189905283810360a0850152905062003ad9818862003715565b905082810360c084015262003aef818762003715565b60ff9590951660e084015250506101000152979650505050505050565b60a08152600062003b2160a083018862003715565b6001600160a01b039690961660208301525060408101939093526060830191909152608090910152919050565b60408152600062003b63604083018562003715565b905082151560208301529392505050565b60208082526039908201527f6e6f7420656e6f75676820544675656c20746f20636f7665722074686520637260408201527f6f73732d636861696e207472616e73616374696f6e2066656500000000000000606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b604051601f8201601f1916810167ffffffffffffffff8111828210171562003c345762003c3462003ecc565b604052919050565b600067ffffffffffffffff82111562003c595762003c5962003ecc565b5060051b60200190565b600067ffffffffffffffff82111562003c805762003c8062003ecc565b50601f01601f191660200190565b60006001600160a01b0382811684821680830382111562003cb35762003cb362003e8a565b01949350505050565b6000821982111562003cd25762003cd262003e8a565b500190565b600060ff821660ff84168060ff0382111562003cf75762003cf762003e8a565b019392505050565b60008262003d115762003d1162003ea0565b500490565b60006001600160a01b038281168482168115158284048211161562003d3f5762003d3f62003e8a565b02949350505050565b600081600019048311821515161562003d655762003d6562003e8a565b500290565b60006001600160a01b038381169083168181101562003d8d5762003d8d62003e8a565b039392505050565b60008282101562003daa5762003daa62003e8a565b500390565b600060ff821660ff84168082101562003dcc5762003dcc62003e8a565b90039392505050565b60005b8381101562003df257818101518382015260200162003dd8565b8381111562001f2b5750506000910152565b60008162003e165762003e1662003e8a565b506000190190565b600181811c9082168062003e3357607f821691505b6020821081141562001ac857634e487b7160e01b600052602260045260246000fd5b600060001982141562003e6c5762003e6c62003e8a565b5060010190565b60008262003e855762003e8562003ea0565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811462003ef857600080fd5b50565b60ff8116811462003ef857600080fdfe60806040523480156200001157600080fd5b50604051620011493803806200114983398101604081905262000034916200021b565b84838381600390805190602001906200004f929190620000be565b50805162000065906004906020840190620000be565b5050600580546001600160a01b0319166001600160a01b0393909316929092179091555083516200009e906006906020870190620000be565b506007805460ff191660ff92909216919091179055506200033c92505050565b828054620000cc90620002e9565b90600052602060002090601f016020900481019282620000f057600085556200013b565b82601f106200010b57805160ff19168380011785556200013b565b828001600101855582156200013b579182015b828111156200013b5782518255916020019190600101906200011e565b50620001499291506200014d565b5090565b5b808211156200014957600081556001016200014e565b600082601f8301126200017657600080fd5b81516001600160401b038082111562000193576200019362000326565b604051601f8301601f19908116603f01168101908282118183101715620001be57620001be62000326565b81604052838152602092508683858801011115620001db57600080fd5b600091505b83821015620001ff5785820183015181830184015290820190620001e0565b83821115620002115760008385830101525b9695505050505050565b600080600080600060a086880312156200023457600080fd5b85516001600160a01b03811681146200024c57600080fd5b60208701519095506001600160401b03808211156200026a57600080fd5b6200027889838a0162000164565b955060408801519150808211156200028f57600080fd5b6200029d89838a0162000164565b94506060880151915080821115620002b457600080fd5b50620002c38882890162000164565b925050608086015160ff81168114620002db57600080fd5b809150509295509295909350565b600181811c90821680620002fe57607f821691505b602082108114156200032057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610dfd806200034c6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063880cdc3111610097578063a457c2d711610066578063a457c2d71461022a578063a9059cbb1461023d578063c370b04214610250578063dd62ed3e1461025857600080fd5b8063880cdc31146101d15780638da5cb5b146101e457806395d89b411461020f5780639dc29fac1461021757600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461018057806340c10f191461019357806370a08231146101a857600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61026b565b60405161011a9190610cbb565b60405180910390f35b610136610131366004610c91565b6102fd565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610c55565b610315565b60075460405160ff909116815260200161011a565b61013661018e366004610c91565b610339565b6101a66101a1366004610c91565b61035b565b005b61014a6101b6366004610c00565b6001600160a01b031660009081526020819052604090205490565b6101a66101df366004610c00565b61039c565b6005546101f7906001600160a01b031681565b6040516001600160a01b03909116815260200161011a565b61010d61042f565b6101a6610225366004610c91565b61043e565b610136610238366004610c91565b61058f565b61013661024b366004610c91565b61060a565b61010d610618565b61014a610266366004610c22565b610627565b60606003805461027a90610d76565b80601f01602080910402602001604051908101604052809291908181526020018280546102a690610d76565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b5050505050905090565b60003361030b818585610652565b5060019392505050565b600033610323858285610777565b61032e8585856107f1565b506001949350505050565b60003361030b81858561034c8383610627565b6103569190610d47565b610652565b6005546001600160a01b0316331461038e5760405162461bcd60e51b815260040161038590610d10565b60405180910390fd5b61039882826109bf565b5050565b6005546001600160a01b031633146103c65760405162461bcd60e51b815260040161038590610d10565b600554604080516001600160a01b03928316815291831660208301527fe2c7d1c4da37855e682bde14f17826d185497973b73fba7554daa6da467058d9910160405180910390a1600580546001600160a01b0319166001600160a01b0392909216919091179055565b60606004805461027a90610d76565b6005546001600160a01b031633146104685760405162461bcd60e51b815260040161038590610d10565b6001600160a01b038216600090815260208190526040902054818110156104ec5760405162461bcd60e51b815260206004820152603260248201527f566f7563686572206f776e657220646f6573206e6f74206861766520656e6f7560448201527133b4103130b630b731b2903a3790313ab93760711b6064820152608401610385565b6005546001600160a01b031660006105048583610627565b9050838110156105735760405162461bcd60e51b815260206004820152603460248201527f566f7563686572206f776e657220646964206e6f7420617070726f76656420656044820152733737bab3b41030b6b7bab73a103a3790313ab93760611b6064820152608401610385565b61057e858386610777565b6105888585610a9e565b5050505050565b6000338161059d8286610627565b9050838110156105fd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610385565b61032e8286868403610652565b60003361030b8185856107f1565b60606006805461027a90610d76565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106b45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610385565b6001600160a01b0382166107155760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610385565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107838484610627565b905060001981146107eb57818110156107de5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610385565b6107eb8484848403610652565b50505050565b6001600160a01b0383166108555760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610385565b6001600160a01b0382166108b75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610385565b6001600160a01b0383166000908152602081905260409020548181101561092f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610385565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610966908490610d47565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109b291815260200190565b60405180910390a36107eb565b6001600160a01b038216610a155760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610385565b8060026000828254610a279190610d47565b90915550506001600160a01b03821660009081526020819052604081208054839290610a54908490610d47565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b038216610afe5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610385565b6001600160a01b03821660009081526020819052604090205481811015610b725760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610385565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610ba1908490610d5f565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161076a565b80356001600160a01b0381168114610bfb57600080fd5b919050565b600060208284031215610c1257600080fd5b610c1b82610be4565b9392505050565b60008060408385031215610c3557600080fd5b610c3e83610be4565b9150610c4c60208401610be4565b90509250929050565b600080600060608486031215610c6a57600080fd5b610c7384610be4565b9250610c8160208501610be4565b9150604084013590509250925092565b60008060408385031215610ca457600080fd5b610cad83610be4565b946020939093013593505050565b600060208083528351808285015260005b81811015610ce857858101830151858201604001528201610ccc565b81811115610cfa576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252601c908201527f6f6e6c79206f776e65722063616e206d616b65207468652063616c6c00000000604082015260600190565b60008219821115610d5a57610d5a610db1565b500190565b600082821015610d7157610d71610db1565b500390565b600181811c90821680610d8a57607f821691505b60208210811415610dab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220bb6edf295f8335d5e8ebc203aa3055cd9e55e5d41323a523f71317334be4f9fd64736f6c63430008070033a2646970667358221220bc0268df373720bf5a5aaf9626d45d786e191dd90bc172f500de16647858bd7864736f6c63430008070033",
}

// TNT20TokenBankABI is the input ABI used to generate the binding from.
// Deprecated: Use TNT20TokenBankMetaData.ABI instead.
var TNT20TokenBankABI = TNT20TokenBankMetaData.ABI

// TNT20TokenBankBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TNT20TokenBankMetaData.Bin instead.
var TNT20TokenBankBin = TNT20TokenBankMetaData.Bin

// DeployTNT20TokenBank deploys a new Ethereum contract, binding an instance of TNT20TokenBank to it.
func DeployTNT20TokenBank(auth *bind.TransactOpts, backend bind.ContractBackend, mainchainID_ *big.Int, chainRegistrar_ common.Address) (common.Address, *types.Transaction, *TNT20TokenBank, error) {
	parsed, err := TNT20TokenBankMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TNT20TokenBankBin), backend, mainchainID_, chainRegistrar_)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TNT20TokenBank{TNT20TokenBankCaller: TNT20TokenBankCaller{contract: contract}, TNT20TokenBankTransactor: TNT20TokenBankTransactor{contract: contract}, TNT20TokenBankFilterer: TNT20TokenBankFilterer{contract: contract}}, nil
}

// TNT20TokenBank is an auto generated Go binding around an Ethereum contract.
type TNT20TokenBank struct {
	TNT20TokenBankCaller     // Read-only binding to the contract
	TNT20TokenBankTransactor // Write-only binding to the contract
	TNT20TokenBankFilterer   // Log filterer for contract events
}

// TNT20TokenBankCaller is an auto generated read-only Go binding around an Ethereum contract.
type TNT20TokenBankCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TNT20TokenBankTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TNT20TokenBankTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TNT20TokenBankFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TNT20TokenBankFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TNT20TokenBankSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TNT20TokenBankSession struct {
	Contract     *TNT20TokenBank   // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TNT20TokenBankCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TNT20TokenBankCallerSession struct {
	Contract *TNT20TokenBankCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts         // Call options to use throughout this session
}

// TNT20TokenBankTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TNT20TokenBankTransactorSession struct {
	Contract     *TNT20TokenBankTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts         // Transaction auth options to use throughout this session
}

// TNT20TokenBankRaw is an auto generated low-level Go binding around an Ethereum contract.
type TNT20TokenBankRaw struct {
	Contract *TNT20TokenBank // Generic contract binding to access the raw methods on
}

// TNT20TokenBankCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TNT20TokenBankCallerRaw struct {
	Contract *TNT20TokenBankCaller // Generic read-only contract binding to access the raw methods on
}

// TNT20TokenBankTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TNT20TokenBankTransactorRaw struct {
	Contract *TNT20TokenBankTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTNT20TokenBank creates a new instance of TNT20TokenBank, bound to a specific deployed contract.
func NewTNT20TokenBank(address common.Address, backend bind.ContractBackend) (*TNT20TokenBank, error) {
	contract, err := bindTNT20TokenBank(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBank{TNT20TokenBankCaller: TNT20TokenBankCaller{contract: contract}, TNT20TokenBankTransactor: TNT20TokenBankTransactor{contract: contract}, TNT20TokenBankFilterer: TNT20TokenBankFilterer{contract: contract}}, nil
}

// NewTNT20TokenBankCaller creates a new read-only instance of TNT20TokenBank, bound to a specific deployed contract.
func NewTNT20TokenBankCaller(address common.Address, caller bind.ContractCaller) (*TNT20TokenBankCaller, error) {
	contract, err := bindTNT20TokenBank(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankCaller{contract: contract}, nil
}

// NewTNT20TokenBankTransactor creates a new write-only instance of TNT20TokenBank, bound to a specific deployed contract.
func NewTNT20TokenBankTransactor(address common.Address, transactor bind.ContractTransactor) (*TNT20TokenBankTransactor, error) {
	contract, err := bindTNT20TokenBank(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankTransactor{contract: contract}, nil
}

// NewTNT20TokenBankFilterer creates a new log filterer instance of TNT20TokenBank, bound to a specific deployed contract.
func NewTNT20TokenBankFilterer(address common.Address, filterer bind.ContractFilterer) (*TNT20TokenBankFilterer, error) {
	contract, err := bindTNT20TokenBank(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankFilterer{contract: contract}, nil
}

// bindTNT20TokenBank binds a generic wrapper to an already deployed contract.
func bindTNT20TokenBank(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TNT20TokenBankABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TNT20TokenBank *TNT20TokenBankRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TNT20TokenBank.Contract.TNT20TokenBankCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TNT20TokenBank *TNT20TokenBankRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.TNT20TokenBankTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TNT20TokenBank *TNT20TokenBankRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.TNT20TokenBankTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TNT20TokenBank *TNT20TokenBankCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TNT20TokenBank.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TNT20TokenBank *TNT20TokenBankTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TNT20TokenBank *TNT20TokenBankTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.contract.Transact(opts, method, params...)
}

// AllDenoms is a free data retrieval call binding the contract method 0x588b1408.
//
// Solidity: function allDenoms(uint256 ) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankCaller) AllDenoms(opts *bind.CallOpts, arg0 *big.Int) (string, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "allDenoms", arg0)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// AllDenoms is a free data retrieval call binding the contract method 0x588b1408.
//
// Solidity: function allDenoms(uint256 ) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankSession) AllDenoms(arg0 *big.Int) (string, error) {
	return _TNT20TokenBank.Contract.AllDenoms(&_TNT20TokenBank.CallOpts, arg0)
}

// AllDenoms is a free data retrieval call binding the contract method 0x588b1408.
//
// Solidity: function allDenoms(uint256 ) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) AllDenoms(arg0 *big.Int) (string, error) {
	return _TNT20TokenBank.Contract.AllDenoms(&_TNT20TokenBank.CallOpts, arg0)
}

// AllVouchers is a free data retrieval call binding the contract method 0x27ca4df1.
//
// Solidity: function allVouchers(uint256 ) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankCaller) AllVouchers(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "allVouchers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// AllVouchers is a free data retrieval call binding the contract method 0x27ca4df1.
//
// Solidity: function allVouchers(uint256 ) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankSession) AllVouchers(arg0 *big.Int) (common.Address, error) {
	return _TNT20TokenBank.Contract.AllVouchers(&_TNT20TokenBank.CallOpts, arg0)
}

// AllVouchers is a free data retrieval call binding the contract method 0x27ca4df1.
//
// Solidity: function allVouchers(uint256 ) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) AllVouchers(arg0 *big.Int) (common.Address, error) {
	return _TNT20TokenBank.Contract.AllVouchers(&_TNT20TokenBank.CallOpts, arg0)
}

// DenomToVoucherLookup is a free data retrieval call binding the contract method 0x1527b14d.
//
// Solidity: function denomToVoucherLookup(string ) view returns(address contractAddress, bool exists)
func (_TNT20TokenBank *TNT20TokenBankCaller) DenomToVoucherLookup(opts *bind.CallOpts, arg0 string) (struct {
	ContractAddress common.Address
	Exists          bool
}, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "denomToVoucherLookup", arg0)

	outstruct := new(struct {
		ContractAddress common.Address
		Exists          bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.ContractAddress = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Exists = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// DenomToVoucherLookup is a free data retrieval call binding the contract method 0x1527b14d.
//
// Solidity: function denomToVoucherLookup(string ) view returns(address contractAddress, bool exists)
func (_TNT20TokenBank *TNT20TokenBankSession) DenomToVoucherLookup(arg0 string) (struct {
	ContractAddress common.Address
	Exists          bool
}, error) {
	return _TNT20TokenBank.Contract.DenomToVoucherLookup(&_TNT20TokenBank.CallOpts, arg0)
}

// DenomToVoucherLookup is a free data retrieval call binding the contract method 0x1527b14d.
//
// Solidity: function denomToVoucherLookup(string ) view returns(address contractAddress, bool exists)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) DenomToVoucherLookup(arg0 string) (struct {
	ContractAddress common.Address
	Exists          bool
}, error) {
	return _TNT20TokenBank.Contract.DenomToVoucherLookup(&_TNT20TokenBank.CallOpts, arg0)
}

// Exists is a free data retrieval call binding the contract method 0x261a323e.
//
// Solidity: function exists(string denom) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankCaller) Exists(opts *bind.CallOpts, denom string) (bool, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "exists", denom)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Exists is a free data retrieval call binding the contract method 0x261a323e.
//
// Solidity: function exists(string denom) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankSession) Exists(denom string) (bool, error) {
	return _TNT20TokenBank.Contract.Exists(&_TNT20TokenBank.CallOpts, denom)
}

// Exists is a free data retrieval call binding the contract method 0x261a323e.
//
// Solidity: function exists(string denom) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) Exists(denom string) (bool, error) {
	return _TNT20TokenBank.Contract.Exists(&_TNT20TokenBank.CallOpts, denom)
}

// Exists0 is a free data retrieval call binding the contract method 0xf6a3d24e.
//
// Solidity: function exists(address voucherAddress) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankCaller) Exists0(opts *bind.CallOpts, voucherAddress common.Address) (bool, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "exists0", voucherAddress)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Exists0 is a free data retrieval call binding the contract method 0xf6a3d24e.
//
// Solidity: function exists(address voucherAddress) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankSession) Exists0(voucherAddress common.Address) (bool, error) {
	return _TNT20TokenBank.Contract.Exists0(&_TNT20TokenBank.CallOpts, voucherAddress)
}

// Exists0 is a free data retrieval call binding the contract method 0xf6a3d24e.
//
// Solidity: function exists(address voucherAddress) view returns(bool)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) Exists0(voucherAddress common.Address) (bool, error) {
	return _TNT20TokenBank.Contract.Exists0(&_TNT20TokenBank.CallOpts, voucherAddress)
}

// GetAdjustedValidatorSet is a free data retrieval call binding the contract method 0xaa861c15.
//
// Solidity: function getAdjustedValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetAdjustedValidatorSet(opts *bind.CallOpts, subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getAdjustedValidatorSet", subchainID, dynasty)

	outstruct := new(struct {
		Validators   []common.Address
		ShareAmounts []*big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Validators = *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)
	outstruct.ShareAmounts = *abi.ConvertType(out[1], new([]*big.Int)).(*[]*big.Int)

	return *outstruct, err

}

// GetAdjustedValidatorSet is a free data retrieval call binding the contract method 0xaa861c15.
//
// Solidity: function getAdjustedValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_TNT20TokenBank *TNT20TokenBankSession) GetAdjustedValidatorSet(subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	return _TNT20TokenBank.Contract.GetAdjustedValidatorSet(&_TNT20TokenBank.CallOpts, subchainID, dynasty)
}

// GetAdjustedValidatorSet is a free data retrieval call binding the contract method 0xaa861c15.
//
// Solidity: function getAdjustedValidatorSet(uint256 subchainID, uint256 dynasty) view returns(address[] validators, uint256[] shareAmounts)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetAdjustedValidatorSet(subchainID *big.Int, dynasty *big.Int) (struct {
	Validators   []common.Address
	ShareAmounts []*big.Int
}, error) {
	return _TNT20TokenBank.Contract.GetAdjustedValidatorSet(&_TNT20TokenBank.CallOpts, subchainID, dynasty)
}

// GetDenom is a free data retrieval call binding the contract method 0xebda9962.
//
// Solidity: function getDenom(address voucherContractAddr) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetDenom(opts *bind.CallOpts, voucherContractAddr common.Address) (string, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getDenom", voucherContractAddr)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// GetDenom is a free data retrieval call binding the contract method 0xebda9962.
//
// Solidity: function getDenom(address voucherContractAddr) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankSession) GetDenom(voucherContractAddr common.Address) (string, error) {
	return _TNT20TokenBank.Contract.GetDenom(&_TNT20TokenBank.CallOpts, voucherContractAddr)
}

// GetDenom is a free data retrieval call binding the contract method 0xebda9962.
//
// Solidity: function getDenom(address voucherContractAddr) view returns(string)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetDenom(voucherContractAddr common.Address) (string, error) {
	return _TNT20TokenBank.Contract.GetDenom(&_TNT20TokenBank.CallOpts, voucherContractAddr)
}

// GetMaxProcessedTokenLockNonce is a free data retrieval call binding the contract method 0xf95627ac.
//
// Solidity: function getMaxProcessedTokenLockNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetMaxProcessedTokenLockNonce(opts *bind.CallOpts, chainID *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getMaxProcessedTokenLockNonce", chainID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMaxProcessedTokenLockNonce is a free data retrieval call binding the contract method 0xf95627ac.
//
// Solidity: function getMaxProcessedTokenLockNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) GetMaxProcessedTokenLockNonce(chainID *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetMaxProcessedTokenLockNonce(&_TNT20TokenBank.CallOpts, chainID)
}

// GetMaxProcessedTokenLockNonce is a free data retrieval call binding the contract method 0xf95627ac.
//
// Solidity: function getMaxProcessedTokenLockNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetMaxProcessedTokenLockNonce(chainID *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetMaxProcessedTokenLockNonce(&_TNT20TokenBank.CallOpts, chainID)
}

// GetMaxProcessedVoucherBurnNonce is a free data retrieval call binding the contract method 0x766f8fb0.
//
// Solidity: function getMaxProcessedVoucherBurnNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetMaxProcessedVoucherBurnNonce(opts *bind.CallOpts, chainID *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getMaxProcessedVoucherBurnNonce", chainID)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetMaxProcessedVoucherBurnNonce is a free data retrieval call binding the contract method 0x766f8fb0.
//
// Solidity: function getMaxProcessedVoucherBurnNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) GetMaxProcessedVoucherBurnNonce(chainID *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetMaxProcessedVoucherBurnNonce(&_TNT20TokenBank.CallOpts, chainID)
}

// GetMaxProcessedVoucherBurnNonce is a free data retrieval call binding the contract method 0x766f8fb0.
//
// Solidity: function getMaxProcessedVoucherBurnNonce(uint256 chainID) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetMaxProcessedVoucherBurnNonce(chainID *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetMaxProcessedVoucherBurnNonce(&_TNT20TokenBank.CallOpts, chainID)
}

// GetTokenLockEventHeight is a free data retrieval call binding the contract method 0xdd17eb6d.
//
// Solidity: function getTokenLockEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetTokenLockEventHeight(opts *bind.CallOpts, chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getTokenLockEventHeight", chainID, eventNonce)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetTokenLockEventHeight is a free data retrieval call binding the contract method 0xdd17eb6d.
//
// Solidity: function getTokenLockEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) GetTokenLockEventHeight(chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetTokenLockEventHeight(&_TNT20TokenBank.CallOpts, chainID, eventNonce)
}

// GetTokenLockEventHeight is a free data retrieval call binding the contract method 0xdd17eb6d.
//
// Solidity: function getTokenLockEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetTokenLockEventHeight(chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetTokenLockEventHeight(&_TNT20TokenBank.CallOpts, chainID, eventNonce)
}

// GetVoucher is a free data retrieval call binding the contract method 0xa2cc6981.
//
// Solidity: function getVoucher(string denom) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetVoucher(opts *bind.CallOpts, denom string) (common.Address, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getVoucher", denom)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetVoucher is a free data retrieval call binding the contract method 0xa2cc6981.
//
// Solidity: function getVoucher(string denom) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankSession) GetVoucher(denom string) (common.Address, error) {
	return _TNT20TokenBank.Contract.GetVoucher(&_TNT20TokenBank.CallOpts, denom)
}

// GetVoucher is a free data retrieval call binding the contract method 0xa2cc6981.
//
// Solidity: function getVoucher(string denom) view returns(address)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetVoucher(denom string) (common.Address, error) {
	return _TNT20TokenBank.Contract.GetVoucher(&_TNT20TokenBank.CallOpts, denom)
}

// GetVoucherBurnEventHeight is a free data retrieval call binding the contract method 0x6ac739b9.
//
// Solidity: function getVoucherBurnEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) GetVoucherBurnEventHeight(opts *bind.CallOpts, chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "getVoucherBurnEventHeight", chainID, eventNonce)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetVoucherBurnEventHeight is a free data retrieval call binding the contract method 0x6ac739b9.
//
// Solidity: function getVoucherBurnEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) GetVoucherBurnEventHeight(chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetVoucherBurnEventHeight(&_TNT20TokenBank.CallOpts, chainID, eventNonce)
}

// GetVoucherBurnEventHeight is a free data retrieval call binding the contract method 0x6ac739b9.
//
// Solidity: function getVoucherBurnEventHeight(uint256 chainID, uint256 eventNonce) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) GetVoucherBurnEventHeight(chainID *big.Int, eventNonce *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.GetVoucherBurnEventHeight(&_TNT20TokenBank.CallOpts, chainID, eventNonce)
}

// MainchainID is a free data retrieval call binding the contract method 0x073b9502.
//
// Solidity: function mainchainID() view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) MainchainID(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "mainchainID")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MainchainID is a free data retrieval call binding the contract method 0x073b9502.
//
// Solidity: function mainchainID() view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) MainchainID() (*big.Int, error) {
	return _TNT20TokenBank.Contract.MainchainID(&_TNT20TokenBank.CallOpts)
}

// MainchainID is a free data retrieval call binding the contract method 0x073b9502.
//
// Solidity: function mainchainID() view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) MainchainID() (*big.Int, error) {
	return _TNT20TokenBank.Contract.MainchainID(&_TNT20TokenBank.CallOpts)
}

// TokenLockNonceMap is a free data retrieval call binding the contract method 0x8883931e.
//
// Solidity: function tokenLockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) TokenLockNonceMap(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "tokenLockNonceMap", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenLockNonceMap is a free data retrieval call binding the contract method 0x8883931e.
//
// Solidity: function tokenLockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) TokenLockNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TokenLockNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// TokenLockNonceMap is a free data retrieval call binding the contract method 0x8883931e.
//
// Solidity: function tokenLockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) TokenLockNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TokenLockNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// TokenLockVotingRecords is a free data retrieval call binding the contract method 0x1eb78737.
//
// Solidity: function tokenLockVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankCaller) TokenLockVotingRecords(opts *bind.CallOpts, arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "tokenLockVotingRecords", arg0, arg1)

	outstruct := new(struct {
		Dynasty          *big.Int
		AccumlatedShares *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Dynasty = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.AccumlatedShares = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// TokenLockVotingRecords is a free data retrieval call binding the contract method 0x1eb78737.
//
// Solidity: function tokenLockVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankSession) TokenLockVotingRecords(arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	return _TNT20TokenBank.Contract.TokenLockVotingRecords(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// TokenLockVotingRecords is a free data retrieval call binding the contract method 0x1eb78737.
//
// Solidity: function tokenLockVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) TokenLockVotingRecords(arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	return _TNT20TokenBank.Contract.TokenLockVotingRecords(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// TokenUnlockNonceMap is a free data retrieval call binding the contract method 0xccf187c7.
//
// Solidity: function tokenUnlockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) TokenUnlockNonceMap(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "tokenUnlockNonceMap", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenUnlockNonceMap is a free data retrieval call binding the contract method 0xccf187c7.
//
// Solidity: function tokenUnlockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) TokenUnlockNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TokenUnlockNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// TokenUnlockNonceMap is a free data retrieval call binding the contract method 0xccf187c7.
//
// Solidity: function tokenUnlockNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) TokenUnlockNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TokenUnlockNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// TotalLockedAmounts is a free data retrieval call binding the contract method 0x3f1a8aa8.
//
// Solidity: function totalLockedAmounts(uint256 , address ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) TotalLockedAmounts(opts *bind.CallOpts, arg0 *big.Int, arg1 common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "totalLockedAmounts", arg0, arg1)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalLockedAmounts is a free data retrieval call binding the contract method 0x3f1a8aa8.
//
// Solidity: function totalLockedAmounts(uint256 , address ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) TotalLockedAmounts(arg0 *big.Int, arg1 common.Address) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TotalLockedAmounts(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// TotalLockedAmounts is a free data retrieval call binding the contract method 0x3f1a8aa8.
//
// Solidity: function totalLockedAmounts(uint256 , address ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) TotalLockedAmounts(arg0 *big.Int, arg1 common.Address) (*big.Int, error) {
	return _TNT20TokenBank.Contract.TotalLockedAmounts(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// VoucherAddressToDenomLookup is a free data retrieval call binding the contract method 0x60569b5e.
//
// Solidity: function voucherAddressToDenomLookup(address ) view returns(string denom, bool exists)
func (_TNT20TokenBank *TNT20TokenBankCaller) VoucherAddressToDenomLookup(opts *bind.CallOpts, arg0 common.Address) (struct {
	Denom  string
	Exists bool
}, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "voucherAddressToDenomLookup", arg0)

	outstruct := new(struct {
		Denom  string
		Exists bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Denom = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.Exists = *abi.ConvertType(out[1], new(bool)).(*bool)

	return *outstruct, err

}

// VoucherAddressToDenomLookup is a free data retrieval call binding the contract method 0x60569b5e.
//
// Solidity: function voucherAddressToDenomLookup(address ) view returns(string denom, bool exists)
func (_TNT20TokenBank *TNT20TokenBankSession) VoucherAddressToDenomLookup(arg0 common.Address) (struct {
	Denom  string
	Exists bool
}, error) {
	return _TNT20TokenBank.Contract.VoucherAddressToDenomLookup(&_TNT20TokenBank.CallOpts, arg0)
}

// VoucherAddressToDenomLookup is a free data retrieval call binding the contract method 0x60569b5e.
//
// Solidity: function voucherAddressToDenomLookup(address ) view returns(string denom, bool exists)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) VoucherAddressToDenomLookup(arg0 common.Address) (struct {
	Denom  string
	Exists bool
}, error) {
	return _TNT20TokenBank.Contract.VoucherAddressToDenomLookup(&_TNT20TokenBank.CallOpts, arg0)
}

// VoucherBurnNonceMap is a free data retrieval call binding the contract method 0xca207569.
//
// Solidity: function voucherBurnNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) VoucherBurnNonceMap(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "voucherBurnNonceMap", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VoucherBurnNonceMap is a free data retrieval call binding the contract method 0xca207569.
//
// Solidity: function voucherBurnNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) VoucherBurnNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.VoucherBurnNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// VoucherBurnNonceMap is a free data retrieval call binding the contract method 0xca207569.
//
// Solidity: function voucherBurnNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) VoucherBurnNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.VoucherBurnNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// VoucherBurnVotingRecords is a free data retrieval call binding the contract method 0xfeaff052.
//
// Solidity: function voucherBurnVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankCaller) VoucherBurnVotingRecords(opts *bind.CallOpts, arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "voucherBurnVotingRecords", arg0, arg1)

	outstruct := new(struct {
		Dynasty          *big.Int
		AccumlatedShares *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Dynasty = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.AccumlatedShares = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// VoucherBurnVotingRecords is a free data retrieval call binding the contract method 0xfeaff052.
//
// Solidity: function voucherBurnVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankSession) VoucherBurnVotingRecords(arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	return _TNT20TokenBank.Contract.VoucherBurnVotingRecords(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// VoucherBurnVotingRecords is a free data retrieval call binding the contract method 0xfeaff052.
//
// Solidity: function voucherBurnVotingRecords(uint256 , bytes32 ) view returns(uint256 dynasty, uint256 accumlatedShares)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) VoucherBurnVotingRecords(arg0 *big.Int, arg1 [32]byte) (struct {
	Dynasty          *big.Int
	AccumlatedShares *big.Int
}, error) {
	return _TNT20TokenBank.Contract.VoucherBurnVotingRecords(&_TNT20TokenBank.CallOpts, arg0, arg1)
}

// VoucherMintNonceMap is a free data retrieval call binding the contract method 0x740cb7f8.
//
// Solidity: function voucherMintNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCaller) VoucherMintNonceMap(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TNT20TokenBank.contract.Call(opts, &out, "voucherMintNonceMap", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VoucherMintNonceMap is a free data retrieval call binding the contract method 0x740cb7f8.
//
// Solidity: function voucherMintNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankSession) VoucherMintNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.VoucherMintNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// VoucherMintNonceMap is a free data retrieval call binding the contract method 0x740cb7f8.
//
// Solidity: function voucherMintNonceMap(uint256 ) view returns(uint256)
func (_TNT20TokenBank *TNT20TokenBankCallerSession) VoucherMintNonceMap(arg0 *big.Int) (*big.Int, error) {
	return _TNT20TokenBank.Contract.VoucherMintNonceMap(&_TNT20TokenBank.CallOpts, arg0)
}

// BurnVouchers is a paid mutator transaction binding the contract method 0xa0df5cc5.
//
// Solidity: function burnVouchers(address sourceChainVoucherContractAddr, address targetChainTokenReceiver, uint256 burnedAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankTransactor) BurnVouchers(opts *bind.TransactOpts, sourceChainVoucherContractAddr common.Address, targetChainTokenReceiver common.Address, burnedAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.contract.Transact(opts, "burnVouchers", sourceChainVoucherContractAddr, targetChainTokenReceiver, burnedAmount)
}

// BurnVouchers is a paid mutator transaction binding the contract method 0xa0df5cc5.
//
// Solidity: function burnVouchers(address sourceChainVoucherContractAddr, address targetChainTokenReceiver, uint256 burnedAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankSession) BurnVouchers(sourceChainVoucherContractAddr common.Address, targetChainTokenReceiver common.Address, burnedAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.BurnVouchers(&_TNT20TokenBank.TransactOpts, sourceChainVoucherContractAddr, targetChainTokenReceiver, burnedAmount)
}

// BurnVouchers is a paid mutator transaction binding the contract method 0xa0df5cc5.
//
// Solidity: function burnVouchers(address sourceChainVoucherContractAddr, address targetChainTokenReceiver, uint256 burnedAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankTransactorSession) BurnVouchers(sourceChainVoucherContractAddr common.Address, targetChainTokenReceiver common.Address, burnedAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.BurnVouchers(&_TNT20TokenBank.TransactOpts, sourceChainVoucherContractAddr, targetChainTokenReceiver, burnedAmount)
}

// LockTokens is a paid mutator transaction binding the contract method 0xbff4c41a.
//
// Solidity: function lockTokens(uint256 targetChainID, address sourceChainTNT20Contract, address targetChainVoucherReceiver, uint256 lockAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankTransactor) LockTokens(opts *bind.TransactOpts, targetChainID *big.Int, sourceChainTNT20Contract common.Address, targetChainVoucherReceiver common.Address, lockAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.contract.Transact(opts, "lockTokens", targetChainID, sourceChainTNT20Contract, targetChainVoucherReceiver, lockAmount)
}

// LockTokens is a paid mutator transaction binding the contract method 0xbff4c41a.
//
// Solidity: function lockTokens(uint256 targetChainID, address sourceChainTNT20Contract, address targetChainVoucherReceiver, uint256 lockAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankSession) LockTokens(targetChainID *big.Int, sourceChainTNT20Contract common.Address, targetChainVoucherReceiver common.Address, lockAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.LockTokens(&_TNT20TokenBank.TransactOpts, targetChainID, sourceChainTNT20Contract, targetChainVoucherReceiver, lockAmount)
}

// LockTokens is a paid mutator transaction binding the contract method 0xbff4c41a.
//
// Solidity: function lockTokens(uint256 targetChainID, address sourceChainTNT20Contract, address targetChainVoucherReceiver, uint256 lockAmount) payable returns()
func (_TNT20TokenBank *TNT20TokenBankTransactorSession) LockTokens(targetChainID *big.Int, sourceChainTNT20Contract common.Address, targetChainVoucherReceiver common.Address, lockAmount *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.LockTokens(&_TNT20TokenBank.TransactOpts, targetChainID, sourceChainTNT20Contract, targetChainVoucherReceiver, lockAmount)
}

// MintVouchers is a paid mutator transaction binding the contract method 0x9d3a0f0c.
//
// Solidity: function mintVouchers(string denom, string name, string symbol, uint8 decimals, address targetChainVoucherReceiver, uint256 mintedAmount, uint256 dynasty, uint256 sourceChainTokenLockNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankTransactor) MintVouchers(opts *bind.TransactOpts, denom string, name string, symbol string, decimals uint8, targetChainVoucherReceiver common.Address, mintedAmount *big.Int, dynasty *big.Int, sourceChainTokenLockNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.contract.Transact(opts, "mintVouchers", denom, name, symbol, decimals, targetChainVoucherReceiver, mintedAmount, dynasty, sourceChainTokenLockNonce)
}

// MintVouchers is a paid mutator transaction binding the contract method 0x9d3a0f0c.
//
// Solidity: function mintVouchers(string denom, string name, string symbol, uint8 decimals, address targetChainVoucherReceiver, uint256 mintedAmount, uint256 dynasty, uint256 sourceChainTokenLockNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankSession) MintVouchers(denom string, name string, symbol string, decimals uint8, targetChainVoucherReceiver common.Address, mintedAmount *big.Int, dynasty *big.Int, sourceChainTokenLockNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.MintVouchers(&_TNT20TokenBank.TransactOpts, denom, name, symbol, decimals, targetChainVoucherReceiver, mintedAmount, dynasty, sourceChainTokenLockNonce)
}

// MintVouchers is a paid mutator transaction binding the contract method 0x9d3a0f0c.
//
// Solidity: function mintVouchers(string denom, string name, string symbol, uint8 decimals, address targetChainVoucherReceiver, uint256 mintedAmount, uint256 dynasty, uint256 sourceChainTokenLockNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankTransactorSession) MintVouchers(denom string, name string, symbol string, decimals uint8, targetChainVoucherReceiver common.Address, mintedAmount *big.Int, dynasty *big.Int, sourceChainTokenLockNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.MintVouchers(&_TNT20TokenBank.TransactOpts, denom, name, symbol, decimals, targetChainVoucherReceiver, mintedAmount, dynasty, sourceChainTokenLockNonce)
}

// UnlockTokens is a paid mutator transaction binding the contract method 0x7ff75b46.
//
// Solidity: function unlockTokens(uint256 sourceChainID, string denom, address targetChainTokenReceiver, uint256 unlockAmount, uint256 dynasty, uint256 sourceChainVoucherBurnNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankTransactor) UnlockTokens(opts *bind.TransactOpts, sourceChainID *big.Int, denom string, targetChainTokenReceiver common.Address, unlockAmount *big.Int, dynasty *big.Int, sourceChainVoucherBurnNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.contract.Transact(opts, "unlockTokens", sourceChainID, denom, targetChainTokenReceiver, unlockAmount, dynasty, sourceChainVoucherBurnNonce)
}

// UnlockTokens is a paid mutator transaction binding the contract method 0x7ff75b46.
//
// Solidity: function unlockTokens(uint256 sourceChainID, string denom, address targetChainTokenReceiver, uint256 unlockAmount, uint256 dynasty, uint256 sourceChainVoucherBurnNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankSession) UnlockTokens(sourceChainID *big.Int, denom string, targetChainTokenReceiver common.Address, unlockAmount *big.Int, dynasty *big.Int, sourceChainVoucherBurnNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.UnlockTokens(&_TNT20TokenBank.TransactOpts, sourceChainID, denom, targetChainTokenReceiver, unlockAmount, dynasty, sourceChainVoucherBurnNonce)
}

// UnlockTokens is a paid mutator transaction binding the contract method 0x7ff75b46.
//
// Solidity: function unlockTokens(uint256 sourceChainID, string denom, address targetChainTokenReceiver, uint256 unlockAmount, uint256 dynasty, uint256 sourceChainVoucherBurnNonce) returns()
func (_TNT20TokenBank *TNT20TokenBankTransactorSession) UnlockTokens(sourceChainID *big.Int, denom string, targetChainTokenReceiver common.Address, unlockAmount *big.Int, dynasty *big.Int, sourceChainVoucherBurnNonce *big.Int) (*types.Transaction, error) {
	return _TNT20TokenBank.Contract.UnlockTokens(&_TNT20TokenBank.TransactOpts, sourceChainID, denom, targetChainTokenReceiver, unlockAmount, dynasty, sourceChainVoucherBurnNonce)
}

// TNT20TokenBankTNT20TokenLockedIterator is returned from FilterTNT20TokenLocked and is used to iterate over the raw logs and unpacked data for TNT20TokenLocked events raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20TokenLockedIterator struct {
	Event *TNT20TokenBankTNT20TokenLocked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TNT20TokenBankTNT20TokenLockedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TNT20TokenBankTNT20TokenLocked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TNT20TokenBankTNT20TokenLocked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TNT20TokenBankTNT20TokenLockedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TNT20TokenBankTNT20TokenLockedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TNT20TokenBankTNT20TokenLocked represents a TNT20TokenLocked event raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20TokenLocked struct {
	Denom                      string
	SourceChainTokenSender     common.Address
	TargetChainID              *big.Int
	TargetChainVoucherReceiver common.Address
	LockedAmount               *big.Int
	Name                       string
	Symbol                     string
	Decimals                   uint8
	TokenLockNonce             *big.Int
	Raw                        types.Log // Blockchain specific contextual infos
}

// FilterTNT20TokenLocked is a free log retrieval operation binding the contract event 0xe5d8852bc02bf44f2a49b2d7722fa497ff83b689a28de1253304d2bc43d7b1cb.
//
// Solidity: event TNT20TokenLocked(string denom, address sourceChainTokenSender, uint256 targetChainID, address targetChainVoucherReceiver, uint256 lockedAmount, string name, string symbol, uint8 decimals, uint256 tokenLockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) FilterTNT20TokenLocked(opts *bind.FilterOpts) (*TNT20TokenBankTNT20TokenLockedIterator, error) {

	logs, sub, err := _TNT20TokenBank.contract.FilterLogs(opts, "TNT20TokenLocked")
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankTNT20TokenLockedIterator{contract: _TNT20TokenBank.contract, event: "TNT20TokenLocked", logs: logs, sub: sub}, nil
}

// WatchTNT20TokenLocked is a free log subscription operation binding the contract event 0xe5d8852bc02bf44f2a49b2d7722fa497ff83b689a28de1253304d2bc43d7b1cb.
//
// Solidity: event TNT20TokenLocked(string denom, address sourceChainTokenSender, uint256 targetChainID, address targetChainVoucherReceiver, uint256 lockedAmount, string name, string symbol, uint8 decimals, uint256 tokenLockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) WatchTNT20TokenLocked(opts *bind.WatchOpts, sink chan<- *TNT20TokenBankTNT20TokenLocked) (event.Subscription, error) {

	logs, sub, err := _TNT20TokenBank.contract.WatchLogs(opts, "TNT20TokenLocked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TNT20TokenBankTNT20TokenLocked)
				if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20TokenLocked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTNT20TokenLocked is a log parse operation binding the contract event 0xe5d8852bc02bf44f2a49b2d7722fa497ff83b689a28de1253304d2bc43d7b1cb.
//
// Solidity: event TNT20TokenLocked(string denom, address sourceChainTokenSender, uint256 targetChainID, address targetChainVoucherReceiver, uint256 lockedAmount, string name, string symbol, uint8 decimals, uint256 tokenLockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) ParseTNT20TokenLocked(log types.Log) (*TNT20TokenBankTNT20TokenLocked, error) {
	event := new(TNT20TokenBankTNT20TokenLocked)
	if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20TokenLocked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TNT20TokenBankTNT20TokenUnlockedIterator is returned from FilterTNT20TokenUnlocked and is used to iterate over the raw logs and unpacked data for TNT20TokenUnlocked events raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20TokenUnlockedIterator struct {
	Event *TNT20TokenBankTNT20TokenUnlocked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TNT20TokenBankTNT20TokenUnlockedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TNT20TokenBankTNT20TokenUnlocked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TNT20TokenBankTNT20TokenUnlocked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TNT20TokenBankTNT20TokenUnlockedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TNT20TokenBankTNT20TokenUnlockedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TNT20TokenBankTNT20TokenUnlocked represents a TNT20TokenUnlocked event raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20TokenUnlocked struct {
	Denom                       string
	TargetChainTokenReceiver    common.Address
	UnlockedAmount              *big.Int
	SourceChainVoucherBurnNonce *big.Int
	TokenUnlockNonce            *big.Int
	Raw                         types.Log // Blockchain specific contextual infos
}

// FilterTNT20TokenUnlocked is a free log retrieval operation binding the contract event 0x189b6301573b050cb7c350cae6d2d5c6262fda802e3b6cc69ee25eb35bdaa4eb.
//
// Solidity: event TNT20TokenUnlocked(string denom, address targetChainTokenReceiver, uint256 unlockedAmount, uint256 sourceChainVoucherBurnNonce, uint256 tokenUnlockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) FilterTNT20TokenUnlocked(opts *bind.FilterOpts) (*TNT20TokenBankTNT20TokenUnlockedIterator, error) {

	logs, sub, err := _TNT20TokenBank.contract.FilterLogs(opts, "TNT20TokenUnlocked")
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankTNT20TokenUnlockedIterator{contract: _TNT20TokenBank.contract, event: "TNT20TokenUnlocked", logs: logs, sub: sub}, nil
}

// WatchTNT20TokenUnlocked is a free log subscription operation binding the contract event 0x189b6301573b050cb7c350cae6d2d5c6262fda802e3b6cc69ee25eb35bdaa4eb.
//
// Solidity: event TNT20TokenUnlocked(string denom, address targetChainTokenReceiver, uint256 unlockedAmount, uint256 sourceChainVoucherBurnNonce, uint256 tokenUnlockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) WatchTNT20TokenUnlocked(opts *bind.WatchOpts, sink chan<- *TNT20TokenBankTNT20TokenUnlocked) (event.Subscription, error) {

	logs, sub, err := _TNT20TokenBank.contract.WatchLogs(opts, "TNT20TokenUnlocked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TNT20TokenBankTNT20TokenUnlocked)
				if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20TokenUnlocked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTNT20TokenUnlocked is a log parse operation binding the contract event 0x189b6301573b050cb7c350cae6d2d5c6262fda802e3b6cc69ee25eb35bdaa4eb.
//
// Solidity: event TNT20TokenUnlocked(string denom, address targetChainTokenReceiver, uint256 unlockedAmount, uint256 sourceChainVoucherBurnNonce, uint256 tokenUnlockNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) ParseTNT20TokenUnlocked(log types.Log) (*TNT20TokenBankTNT20TokenUnlocked, error) {
	event := new(TNT20TokenBankTNT20TokenUnlocked)
	if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20TokenUnlocked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TNT20TokenBankTNT20VoucherBurnedIterator is returned from FilterTNT20VoucherBurned and is used to iterate over the raw logs and unpacked data for TNT20VoucherBurned events raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20VoucherBurnedIterator struct {
	Event *TNT20TokenBankTNT20VoucherBurned // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TNT20TokenBankTNT20VoucherBurnedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TNT20TokenBankTNT20VoucherBurned)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TNT20TokenBankTNT20VoucherBurned)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TNT20TokenBankTNT20VoucherBurnedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TNT20TokenBankTNT20VoucherBurnedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TNT20TokenBankTNT20VoucherBurned represents a TNT20VoucherBurned event raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20VoucherBurned struct {
	Denom                    string
	SourceChainVoucherOwner  common.Address
	TargetChainTokenReceiver common.Address
	BurnedAmount             *big.Int
	VoucherBurnNonce         *big.Int
	Raw                      types.Log // Blockchain specific contextual infos
}

// FilterTNT20VoucherBurned is a free log retrieval operation binding the contract event 0x8cd7380d25c66046ede32c8a8089e2c5c5356ed48d6885bb3956f3a1bc4f030d.
//
// Solidity: event TNT20VoucherBurned(string denom, address sourceChainVoucherOwner, address targetChainTokenReceiver, uint256 burnedAmount, uint256 voucherBurnNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) FilterTNT20VoucherBurned(opts *bind.FilterOpts) (*TNT20TokenBankTNT20VoucherBurnedIterator, error) {

	logs, sub, err := _TNT20TokenBank.contract.FilterLogs(opts, "TNT20VoucherBurned")
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankTNT20VoucherBurnedIterator{contract: _TNT20TokenBank.contract, event: "TNT20VoucherBurned", logs: logs, sub: sub}, nil
}

// WatchTNT20VoucherBurned is a free log subscription operation binding the contract event 0x8cd7380d25c66046ede32c8a8089e2c5c5356ed48d6885bb3956f3a1bc4f030d.
//
// Solidity: event TNT20VoucherBurned(string denom, address sourceChainVoucherOwner, address targetChainTokenReceiver, uint256 burnedAmount, uint256 voucherBurnNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) WatchTNT20VoucherBurned(opts *bind.WatchOpts, sink chan<- *TNT20TokenBankTNT20VoucherBurned) (event.Subscription, error) {

	logs, sub, err := _TNT20TokenBank.contract.WatchLogs(opts, "TNT20VoucherBurned")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TNT20TokenBankTNT20VoucherBurned)
				if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20VoucherBurned", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTNT20VoucherBurned is a log parse operation binding the contract event 0x8cd7380d25c66046ede32c8a8089e2c5c5356ed48d6885bb3956f3a1bc4f030d.
//
// Solidity: event TNT20VoucherBurned(string denom, address sourceChainVoucherOwner, address targetChainTokenReceiver, uint256 burnedAmount, uint256 voucherBurnNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) ParseTNT20VoucherBurned(log types.Log) (*TNT20TokenBankTNT20VoucherBurned, error) {
	event := new(TNT20TokenBankTNT20VoucherBurned)
	if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20VoucherBurned", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TNT20TokenBankTNT20VoucherMintedIterator is returned from FilterTNT20VoucherMinted and is used to iterate over the raw logs and unpacked data for TNT20VoucherMinted events raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20VoucherMintedIterator struct {
	Event *TNT20TokenBankTNT20VoucherMinted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TNT20TokenBankTNT20VoucherMintedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TNT20TokenBankTNT20VoucherMinted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TNT20TokenBankTNT20VoucherMinted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TNT20TokenBankTNT20VoucherMintedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TNT20TokenBankTNT20VoucherMintedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TNT20TokenBankTNT20VoucherMinted represents a TNT20VoucherMinted event raised by the TNT20TokenBank contract.
type TNT20TokenBankTNT20VoucherMinted struct {
	Denom                      string
	TargetChainVoucherReceiver common.Address
	VoucherContract            common.Address
	MintedAmount               *big.Int
	SourceChainTokenLockNonce  *big.Int
	VoucherMintNonce           *big.Int
	Raw                        types.Log // Blockchain specific contextual infos
}

// FilterTNT20VoucherMinted is a free log retrieval operation binding the contract event 0x5249cf5aa9f373a9fda5076a53abb87450615986fd25b4d701a153f8840eaf08.
//
// Solidity: event TNT20VoucherMinted(string denom, address targetChainVoucherReceiver, address voucherContract, uint256 mintedAmount, uint256 sourceChainTokenLockNonce, uint256 voucherMintNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) FilterTNT20VoucherMinted(opts *bind.FilterOpts) (*TNT20TokenBankTNT20VoucherMintedIterator, error) {

	logs, sub, err := _TNT20TokenBank.contract.FilterLogs(opts, "TNT20VoucherMinted")
	if err != nil {
		return nil, err
	}
	return &TNT20TokenBankTNT20VoucherMintedIterator{contract: _TNT20TokenBank.contract, event: "TNT20VoucherMinted", logs: logs, sub: sub}, nil
}

// WatchTNT20VoucherMinted is a free log subscription operation binding the contract event 0x5249cf5aa9f373a9fda5076a53abb87450615986fd25b4d701a153f8840eaf08.
//
// Solidity: event TNT20VoucherMinted(string denom, address targetChainVoucherReceiver, address voucherContract, uint256 mintedAmount, uint256 sourceChainTokenLockNonce, uint256 voucherMintNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) WatchTNT20VoucherMinted(opts *bind.WatchOpts, sink chan<- *TNT20TokenBankTNT20VoucherMinted) (event.Subscription, error) {

	logs, sub, err := _TNT20TokenBank.contract.WatchLogs(opts, "TNT20VoucherMinted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TNT20TokenBankTNT20VoucherMinted)
				if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20VoucherMinted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTNT20VoucherMinted is a log parse operation binding the contract event 0x5249cf5aa9f373a9fda5076a53abb87450615986fd25b4d701a153f8840eaf08.
//
// Solidity: event TNT20VoucherMinted(string denom, address targetChainVoucherReceiver, address voucherContract, uint256 mintedAmount, uint256 sourceChainTokenLockNonce, uint256 voucherMintNonce)
func (_TNT20TokenBank *TNT20TokenBankFilterer) ParseTNT20VoucherMinted(log types.Log) (*TNT20TokenBankTNT20VoucherMinted, error) {
	event := new(TNT20TokenBankTNT20VoucherMinted)
	if err := _TNT20TokenBank.contract.UnpackLog(event, "TNT20VoucherMinted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
